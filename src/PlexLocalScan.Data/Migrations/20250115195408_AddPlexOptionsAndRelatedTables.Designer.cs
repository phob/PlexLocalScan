// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlexLocalScan.Data.Data;

#nullable disable

namespace PlexLocalScan.Data.Migrations
{
    [DbContext(typeof(PlexScanContext))]
    [Migration("20250115195408_AddPlexOptionsAndRelatedTables")]
    partial class AddPlexOptionsAndRelatedTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("PlexLocalScan.Core.Tables.ScannedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DestFile")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genres")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImdbId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TmdbId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UpdateToVersion")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionUpdated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DestFile");

                    b.HasIndex("SourceFile");

                    b.HasIndex("TmdbId");

                    b.HasIndex("SourceFile", "DestFile", "EpisodeNumber")
                        .IsUnique();

                    b.ToTable("ScannedFiles");
                });

            modelBuilder.Entity("PlexLocalScan.Data.Data.FolderMappingDbOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DestinationFolder")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkedPlexOptionsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceFolder")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LinkedPlexOptionsId");

                    b.ToTable("FolderDbMappings");
                });

            modelBuilder.Entity("PlexLocalScan.Data.Data.MediaDetectionDbOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CacheDurationSeconds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MediaDetectionDbOptions");
                });

            modelBuilder.Entity("PlexLocalScan.Data.Data.PlexDbOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlexToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PollingInterval")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessNewFolderDelay")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PlexDbOptions");
                });

            modelBuilder.Entity("PlexLocalScan.Data.Data.TmDbDbOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TmDbDbOptions");
                });

            modelBuilder.Entity("PlexLocalScan.Data.Data.FolderMappingDbOptions", b =>
                {
                    b.HasOne("PlexLocalScan.Data.Data.PlexDbOptions", "PlexOptions")
                        .WithMany("FolderMappings")
                        .HasForeignKey("LinkedPlexOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlexOptions");
                });

            modelBuilder.Entity("PlexLocalScan.Data.Data.PlexDbOptions", b =>
                {
                    b.Navigation("FolderMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
